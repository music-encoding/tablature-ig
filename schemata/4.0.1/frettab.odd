<?xml version="1.0" encoding="utf-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>MEI Fretted Instruments Tablature</title>
        <author>David Lewis</author>
        <author>Richard Lewis</author>
        <author>Tim Crawford</author>
      </titleStmt>
      <publicationStmt>
        <p>Goldsmiths College</p>
      </publicationStmt>
      <sourceDesc>
        <p>Born digital</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <schemaSpec xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" ident="frettab" start="mei meiHead meiCorpus music" ns="http://www.music-encoding.org/ns/mei">

        <specGrp xml:id="frettab">

          <moduleSpec ident="MEI.frettab">
            <desc>Marking up of tablatures for fretted string instruments.</desc>
          </moduleSpec>

          <!-- German lute tablature doesn't use a staff, allow 0 lines -->
          <classSpec mode="change" ident="att.staffDef.log" module="MEI.shared" type="atts">
            <attList>
              <attDef ident="lines" mode="change">
                <datatype>
                  <rng:data type="nonNegativeInteger"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>

          <!-- What is a 'dead' note? Do we need it? -->
          <macroSpec ident="data.FRETNUMBER" module="MEI" type="dt" mode="replace">
            <desc>In string tablature, the fret number. The value '0' (zero) indicates the open string and 'x' indicates a 'dead' note.</desc>
            <content>
              <rng:choice>
                <rng:data type="token">
                  <rng:param name="pattern">x</rng:param>
                </rng:data>
                <rng:data type="nonNegativeInteger"/>
              </rng:choice>
            </content>
          </macroSpec>

          <!-- Tablature notation types -->
          <macroSpec ident="data.NOTATIONTYPE" module="MEI" type="dt" mode="change">
            <desc>Notation type and subtype</desc>
            <content>
              <valList type="closed">
                <valItem ident="cmn">
                  <desc>Common Music Notation.</desc>
                </valItem>
                <valItem ident="mensural">
                  <desc>Mensural notation.</desc>
                </valItem>
                <valItem ident="mensural.black">
                  <desc>Black mensural notation.</desc>
                </valItem>
                <valItem ident="mensural.white">
                  <desc>White mensural notation.</desc>
                </valItem>
                <valItem ident="neume">
                  <desc>Neumatic notation.</desc>
                </valItem>
                <!-- <valItem ident="neume.heighted"> <desc>Heighted neumatic notation</desc> </valItem> <valItem ident="neume.unheighted"> <desc>Unheighted neumatic notation</desc> </valItem> -->
                <valItem ident="tab">
                  <desc>Tablature notation.</desc>
                </valItem>
                <valItem ident="tab.lute.french">
                  <desc>French lute tablature notation.</desc>
                </valItem>
                <valItem ident="tab.lute.german">
                  <desc>German lute tablature notation.</desc>
                </valItem>
                <valItem ident="tab.lute.italian">
                  <desc>Italian lute tablature notation.</desc>
                </valItem>
                <valItem ident="tab.guitar">
                  <desc>Guitar tablature notation. Also used for Spanish lute tablature.</desc>
                </valItem>
              </valList>
            </content>
          </macroSpec>

          <macroSpec ident="data.COURSENUMBER" module="MEI.frettab" type="dt" mode="add">
            <desc>In string tablature, the number of the course to be played, i.e., [1-9]+.</desc>
            <content>
              <rng:data type="positiveInteger"/>
            </content>
          </macroSpec>

          <classSpec ident="att.note.ges.tablature" module="MEI.frettab" type="atts" mode="add">
            <attList>
              <attDef ident="tab.course" usage="opt">
                <desc>Records which course is to be played.</desc>
                <datatype>
                  <rng:ref name="data.COURSENUMBER"/>
                </datatype>
              </attDef>
              <!-- tab.fret is defined in module MEI.stringtab so not needed here.
                   Alternatively remove module MEI.stringtab and add the following:
              <attDef ident="tab.fret" usage="opt">
                <desc>Records which fret is to be played.</desc>
                <datatype>
                  <rng:ref name="data.FRETNUMBER"/>
                </datatype>
              </attDef>
              -->
              <attDef ident="tab.muted" usage="opt">
                <desc>To indicate strings muted with the left hand (to achieve a percussive effect).</desc>
                <datatype>
                  <rng:data type="boolean"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>

          <!-- What is this for? Obsolete?-->
          <classSpec ident="att.note.ges.tablature.mod" module="MEI.frettab" type="atts" mode="add">
            <desc>Attributes shared by elements which indicate some sort of modification to a note in tablature.</desc>
            <attList>
              <attDef ident="tab.fromFret" usage="opt">
                <desc>Indicates a starting fret of a multi-fret gesture.</desc>
                <datatype>
                  <rng:ref name="data.FRETNUMBER"/>
                </datatype>
              </attDef>
              <attDef ident="tab.toFret" usage="opt">
                <desc>Indicates an ending fret of a multi-fret gesture.</desc>
                <datatype>
                  <rng:ref name="data.FRETNUMBER"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>

          <classSpec ident="model.fretGlyphLike" module="MEI.frettab" type="model" mode="add">
            <desc>Groups elements that may used as symbols (or glyphs) for a &lt;note&gt; in a tablature staff.</desc>
            <classes>
              <memberOf key="model.noteModifierLike"/>
            </classes>
          </classSpec>

          <elementSpec ident="fretGlyph" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>tablature note glyph</gloss>
            <desc>Encodes the actual symbol found in the tablature source for a particular note. These are often simple numerals or letters, but may also (in German lute tablature) be characters such as ꝯ or ꝫ or letters with a bar such as ā. They may also be compound glypths that contain articulation symbols such as '/'.</desc>
            <classes>
              <memberOf key="att.facsimile"/>
              <memberOf key="model.fretGlyphLike"/>
            </classes>
            <content>
              <rng:text/>
            </content>
            <attList>
              <attDef ident="symbol" usage="opt">
                <desc>The fret symbol.</desc>
                <datatype>
                  <rng:text/>
                </datatype>
              </attDef>
              <attDef ident="symbol.mod" usage="opt">
                <desc>The fret symbol modifier.</desc>
                <valList type="closed">
                  <valItem ident="strikethrough">
                    <desc>strikethrough.</desc>     <!-- TODO other values? -->
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <!-- Do we need this? Is TabCode notation relevant for MEI? -->
          <macroSpec ident="data.DURATION.tablature" module="MEI.frettab" type="dt">
            <desc>The duration symbols used to encode logical duration of &lt;tabDurSym&gt;s in tablature. This is included for compatibility with common ASCII tab conventions and with TabCode.</desc>
            <content>
              <rng:choice>
                <rng:value>F</rng:value>
                <a:documentation>Fermata</a:documentation>
                <rng:value>B</rng:value>
                <a:documentation>Breve</a:documentation>
                <rng:value>B3</rng:value>
                <a:documentation>Triplet breve</a:documentation>
                <rng:value>B3.</rng:value>
                <a:documentation>Dotted triplet breve</a:documentation>
                <rng:value>W</rng:value>
                <a:documentation>Semibreve (whole note)</a:documentation>
                <rng:value>W.</rng:value>
                <a:documentation>Dotted semibreve (whole note)</a:documentation>
                <rng:value>W3</rng:value>
                <a:documentation>Triplet semibreve (whole note)</a:documentation>
                <rng:value>W3.</rng:value>
                <a:documentation>Dotted triplet semibreve (whole note)</a:documentation>
                <rng:value>H</rng:value>
                <a:documentation>Minim (half note)</a:documentation>
                <rng:value>H.</rng:value>
                <a:documentation>Dotted minim (half note)</a:documentation>
                <rng:value>H3</rng:value>
                <a:documentation>Triplet minim (half note)</a:documentation>
                <rng:value>H3.</rng:value>
                <a:documentation>Dotted triplet minim (half note)</a:documentation>
                <rng:value>Q</rng:value>
                <a:documentation>Crotchet (quarter note)</a:documentation>
                <rng:value>Q.</rng:value>
                <a:documentation>Dotted crotchet (quarter note)</a:documentation>
                <rng:value>Q3</rng:value>
                <a:documentation>Triplet crotchet (quarter note)</a:documentation>
                <rng:value>Q3.</rng:value>
                <a:documentation>Dotted triplet crotchet (quarter note)</a:documentation>
                <rng:value>E</rng:value>
                <a:documentation>Quaver (eight note)</a:documentation>
                <rng:value>E.</rng:value>
                <a:documentation>Dotted quaver (eight note)</a:documentation>
                <rng:value>E3</rng:value>
                <a:documentation>Triplet quaver (eighth note)</a:documentation>
                <rng:value>E3.</rng:value>
                <a:documentation>Dotted triplet quaver (eighth note)</a:documentation>
                <rng:value>S</rng:value>
                <a:documentation>Semiquaver (sixteenth note)</a:documentation>
                <rng:value>S.</rng:value>
                <a:documentation>Dotted semiquaver (sixteenth note)</a:documentation>
                <rng:value>S3</rng:value>
                <a:documentation>Triplet semiquaver (sixteenth note)</a:documentation>
                <rng:value>S3.</rng:value>
                <a:documentation>Dotted triplet semiquaver (sixteenth note)</a:documentation>
                <rng:value>T</rng:value>
                <a:documentation>Demisemiquaver (thirtysecond note)</a:documentation>
                <rng:value>T.</rng:value>
                <a:documentation>Dotted demisemiquaver (thirtysecond note)</a:documentation>
                <rng:value>T3</rng:value>
                <a:documentation>Triplet demisemiquaver (thirtysecond note)</a:documentation>
                <rng:value>T3.</rng:value>
                <a:documentation>Dotted triplet demisemiquaver (thirtysecond note)</a:documentation>
                <rng:value>Y</rng:value>
                <a:documentation>Hemidemisemiquaver (sixtyfourth note)</a:documentation>
                <rng:value>Y.</rng:value>
                <a:documentation>Dotted hemidemisemiquaver (sixtyfourth note)</a:documentation>
                <rng:value>Y3</rng:value>
                <a:documentation>Triplet hemidemisemiquaver (sixtyfourth note)</a:documentation>
                <rng:value>Y3.</rng:value>
                <a:documentation>Dotted triplet hemidemisemiquaver (sixtyfourth note)</a:documentation>
                <rng:value>Z</rng:value>
                <a:documentation>Semihemidemisemiquaver (one hundred and twentyeighth note)</a:documentation>
                <rng:value>Z.</rng:value>
                <a:documentation>Dotted semihemidemisemiquaver (one hundred and twentyeighth note)</a:documentation>
                <rng:value>Z3</rng:value>
                <a:documentation>Triplet semihemidemisemiquaver (one hundred and twentyeighth note)</a:documentation>
                <rng:value>Z3.</rng:value>
                <a:documentation>Dotted triplet semihemidemisemiquaver (one hundred and twentyeighth note)</a:documentation>
              </rng:choice>
            </content>
          </macroSpec>

          <elementSpec ident="tabDurSym" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>tablature rhythm sign</gloss>
            <desc>The durational sign associated with a tablature chord. The intended use of &lt;tabDurSym&gt; is to encode the rhythmic sign found in the source (if any) while the actual duration of the associated tablature chord is encoded using the &lt;tabGrp&gt;'s @dur attribute.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.augmentDots"/>
              <memberOf key="att.facsimile"/>
              <memberOf key="model.chordPart"/>
            </classes>
            <content>
              <rng:text/>
            </content>
            <attList>
              <attDef ident="symbol" usage="opt">
                <desc>The duration symbol.</desc>
                <datatype>
                  <rng:ref name="data.DURATION.tablature"/>
                </datatype>
              </attDef>
              <attDef ident="head" usage="opt">
                <desc>Indicates whether the rhythm sign has a note head and if so, what shape.</desc>
                <datatype>
                  <rng:ref name="data.HEADSHAPE"/>
                </datatype>
              </attDef>
              <attDef ident="flags" usage="opt">
                <desc>The number of flags on the rhythm sign.</desc>
                <datatype>
                  <rng:data type="nonNegativeInteger"/>
                </datatype>
              </attDef>
              <attDef ident="flagDir" usage="opt">
                <desc>Indicates the direction of the rhythm sign's flag(s)</desc>
                <valList type="closed">
                  <valItem ident="left">
                    <desc>Left pointing</desc>
                  </valItem>
                  <valItem ident="right">
                    <desc>Right pointing</desc>
                  </valItem>
                </valList>
              </attDef>
              <attDef ident="serif" usage="opt">
                <desc>Indicates that the rhythm sign has a serif</desc>
                <datatype>
                  <rng:ref name="data.BOOLEAN"/>
                </datatype>
              </attDef>
              <attDef ident="serifDir" usage="opt">
                <desc>Indicates the direction of the rhythm sign's serif when @serif is true</desc>
                <valList type="closed">
                  <valItem ident="left">
                    <desc>Left pointing</desc>
                  </valItem>
                  <valItem ident="right">
                    <desc>Right pointing</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <!-- Do we need this?  Rests are indicated by a &lt;tabGrp&gt; with no notes -->
          <elementSpec ident="rest" module="MEI.shared" mode="change" ns="http://www.music-encoding.org/ns/mei">
            <content>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:ref name="dot"/>
                  <rng:ref name="tabDurSym"/>
                  <rng:ref name="model.appLike"/>
                  <rng:ref name="model.editLike"/>
                  <rng:ref name="model.transcriptionLike"/>
                </rng:choice>
              </rng:zeroOrMore>
            </content>
          </elementSpec>

          <elementSpec ident="fermata" module="MEI.cmn" mode="change" ns="http://www.music-encoding.org/ns/mei">
            <classes mode="change">
              <memberOf mode="add" key="model.chordPart"/>
            </classes>
          </elementSpec>

          <!-- What is this? Something to do with scordatura? -->
          <elementSpec ident="abzug" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>abzug marking</gloss>
            <desc>abzug marking</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="model.chordPart"/>
            </classes>
          </elementSpec>

          <elementSpec ident="tabBarre" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>barré marking</gloss>
            <desc>barré marking</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="model.chordPart"/>
              <memberOf key="model.measurePart"/>
              <memberOf key="model.staffPart"/>
            </classes>
            <attList>
              <attDef ident="fret" usage="opt">
                <desc>Records the location at which the strings should be stopped against a fret in a fretboard diagram. This may or may not be the same as the actual location on the fretboard of the instrument in performance.</desc>
                <datatype>
                  <rng:ref name="data.FRETNUMBER"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="ensembleLine" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>ensemble line</gloss>
            <desc>Indicates that two &lt;note&gt;s are to be played simultaneously.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="model.chordPart"/>
            </classes>
            <content>
              <rng:empty/>
            </content>
          </elementSpec>

          <!-- Can the existing element &lt;line&gt; be used for this? -->
          <elementSpec ident="connectingLine" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>connecting line</gloss>
            <desc>connecting line</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="model.measurePart"/>
              <memberOf key="model.staffPart"/>
            </classes>
            <content>
              <rng:empty/>
            </content>
          </elementSpec>

          <elementSpec ident="separee" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>separeé marking</gloss>
            <desc>Indicates that two &lt;note&gt;s in a single tablature &lt;tabGrp&gt; should be played sequentially (rather than simultaneously).</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="model.chordPart"/>
            </classes>
            <content>
              <rng:empty/>
            </content>
          </elementSpec>

          <elementSpec ident="courseCount" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>number of courses</gloss>
            <desc>The number of courses on a lute.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="model.instrdescPart"/>
            </classes>
            <content>
              <rng:data type="positiveInteger"/>
            </content>
          </elementSpec>

          <macroSpec ident="data.COURSETUNING" module="MEI.frettab" type="dt" mode="add">
            <desc>Some standard lute and guitar tunings</desc>
            <content>
              <valList type="closed">
                <valItem ident="guitar.standard">
                  <desc>E4 B3 G3 D3 A2 E2.</desc>
                </valItem>
                <valItem ident="guitar.drop.D">
                  <desc>E4 B3 G3 D3 A2 D2.</desc>
                </valItem>
                <valItem ident="guitar.open.D">
                  <desc>D4 A3 F#3 D3 A2 D2.</desc>
                </valItem>
                <valItem ident="guitar.open.G">
                  <desc>D4 B3 G3 D3 G2 D2.</desc>
                </valItem>
                <valItem ident="guitar.open.A">
                  <desc>E4 C#4 A3 E3 A2 E2.</desc>
                </valItem>
                <valItem ident="lute.renaissance.6">
                  <desc>G4 D4 A3 F3 C3 G2.</desc>
                </valItem>
                <valItem ident="lute.baroque.d.major">
                  <desc>F#4 D4 A3 F#3 D3 A2 G2 F#2 E2 D2 C#2 B1 A1.</desc>
                </valItem>
                <valItem ident="lute.baroque.d.minor">
                  <desc>F4 D4 A3 F3 D3 A2 G2 F2 E2 D2 C2 B1 A1.</desc>
                </valItem>
              </valList>
            </content>
          </macroSpec>

          <elementSpec ident="tuning" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>tuning of courses</gloss>
            <desc>Specify a @tuning.standard or child &lt;course&gt; elements or
              both. Should be used to indicate the tuning of each course.
              Child &lt;course&gt; elements override or supplement the @tuning.standard.
            </desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="model.instrconfigPart"/>
              <memberOf key="model.staffDefPart"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:ref name="course"/>
              </rng:zeroOrMore>
            </content>
            <attList>
              <attDef ident="tuning.standard" usage="opt">
                <desc>Lute or guitar standard tuning.</desc>
                <datatype>
                  <rng:ref name="data.COURSETUNING"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="course" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>course tuning information</gloss>
            <desc>Describes the tuning of a course on a lute.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.pitched"/>
              <memberOf key="att.accidental"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:ref name="string"/>
              </rng:zeroOrMore>
            </content>
          </elementSpec>

          <elementSpec ident="string" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>a string of a course</gloss>
            <desc>Describes the tuning of a single string of a course on a lute.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.pitched"/>
              <memberOf key="att.accidental"/>
            </classes>
            <content>
              <rng:empty/>
            </content>
          </elementSpec>

          <!-- Left and right hand tablature fingering attributes -->
          <classSpec ident="att.fing.tablature" module="MEI.frettab" type="atts" mode="add">
          <desc>Attributes to describe instrument fingering.</desc>
            <attList>
              <attDef ident="playingHand" usage="opt">
                <desc>The hand (left, right, or both) prescribed by the fingering marking.</desc>
                <valList type="closed">
                  <valItem ident="left">
                    <desc>Left hand</desc>
                  </valItem>
                  <valItem ident="right">
                    <desc>Right hand</desc>
                  </valItem>
                  <valItem ident="both">
                    <desc>Both left and right hands</desc>
                  </valItem>
                </valList>
              </attDef>
              <attDef ident="playingFinger" usage="opt">
                <desc>The finger prescribed by the fingering marking.</desc>
                <datatype>
                  <!-- This macro contains the right information, but is
                       unfortunately specific in its name -->
                  <rng:ref name="data.FINGER.FRET"/>
                </datatype>
              </attDef>
              <attDef ident="symbol" usage="opt">
                <desc>The symbol employed in the fingering marking.</desc>
                <datatype>
                  <rng:text/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>

          <!-- Add tablature specific fingering attributes -->
          <elementSpec ident="fing" module="MEI.fingering" mode="change" ns="http://www.music-encoding.org/ns/mei">
            <classes mode="change">
              <memberOf mode="add" key="att.fing.tablature"/>
            </classes>
          </elementSpec>
          
          <elementSpec ident="tabGrp" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <gloss>tablature stack of rhythm sign and notes</gloss>
            <desc>
              The primary rhythm and pitch information in guitar and lute tablature
              is contained in vertically-aligned stacks of symbols. The main
              components of these stacks are rhythm symbols, which indicate the
              inter-onset time between the current and the next stack, and fret/course
              symbols which indicate what, if anything, should be sounded.
            </desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.facsimile"/>
              <memberOf key="att.chord.log"/>
              <memberOf key="att.chord.vis"/>
              <memberOf key="att.chord.ges"/>
              <memberOf key="att.chord.anl"/>
              <memberOf key="model.eventLike"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:ref name="model.chordPart"/>
                  <rng:ref name="model.appLike"/>
                  <rng:ref name="model.editLike"/>
                  <rng:ref name="model.sylLike"/>
                  <rng:ref name="model.transcriptionLike"/>
                  <rng:ref name="model.verseLike"/>
                </rng:choice>
              </rng:zeroOrMore>
            </content>
          </elementSpec>

          <!-- add tablature specifics to &lt;note&gt; -->
          <elementSpec ident="note" module="MEI.shared" mode="change" ns="http://www.music-encoding.org/ns/mei">
            <classes mode="change">
              <memberOf mode="add" key="att.note.ges.tablature"/>
              <memberOf mode="add" key="att.note.ges.tablature.mod"/>
            </classes>
            <attList mode="add">
              <attDef ident="pitchInflection.startId" usage="opt">
                <desc>Point to the first (pitched) note in the bend gesture.</desc>
                <datatype>
                  <rng:ref name="data.URI"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          
          <!-- The following are predominately used by modern guitar tablature. -->
          <!-- An implementation of documentation: performance-related.md       -->
          <!-- ________________________________________________________________ -->

          <!-- Slides -->

          <classSpec ident="att.gliss.tablature" module="MEI.frettab" type="atts" mode="add">
            <attList>
              <attDef ident="slide" usage="opt">
                <desc>Slide two notes on the same string.</desc>
                <valList type="closed">
                  <valItem ident="legato">
                    <desc>Legato slide</desc>
                  </valItem>
                  <valItem ident="shift">
                    <desc>Shift slide</desc>
                  </valItem>
                </valList>
              </attDef>
              <attDef ident="slide.to" usage="opt">
                <desc>A single-note slide where the note is the target note.</desc>
                <valList type="closed">
                  <valItem ident="upwards">
                    <desc>Slide ascending</desc>
                  </valItem>
                  <valItem ident="downwards">
                    <desc>Slide descending</desc>
                  </valItem>
                </valList>
              </attDef>
              <attDef ident="slide.from" usage="opt">
                <desc>A single-note slide where the note is the start note.</desc>
                <valList type="closed">
                  <valItem ident="upwards">
                    <desc>Slide ascending</desc>
                  </valItem>
                  <valItem ident="downwards">
                    <desc>Slide descending</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>

          <classSpec ident="att.dirmark.tablature" module="MEI.frettab" type="atts" mode="add">
            <attList>
              <attDef ident="show.dirmark" usage="opt">
                <desc>Indicates whether the direction mark is shown.</desc>
                <datatype>
                  <rng:data type="boolean"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>

          <elementSpec ident="gliss" module="MEI.cmn" mode="change">
            <classes mode="change">
              <memberOf mode="add" key="att.gliss.tablature"/>
              <memberOf mode="add" key="att.dirmark.tablature"/>
            </classes>
          </elementSpec>

          <!-- Slur -->

          <elementSpec ident="slur" module="MEI.cmn" mode="change">
            <classes mode="change">
              <memberOf key="att.dirmark.tablature" mode="add" />
            </classes>
            <content mode="change">
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:ref name="curve"/>
                  <rng:ref name="dir"/>
                  <rng:ref name="gliss"/>
                </rng:choice>
              </rng:zeroOrMore>
            </content>
          </elementSpec>

          <classSpec ident="att.technique.tablature" module="MEI.frettab" type="atts" mode="add">
            <attList mode="add">
              <attDef ident="technique" usage="opt">
                <valList type="semi">
                  <valItem ident="artificial-harmonic"/>
                  <valItem ident="bend-neck"/>
                  <valItem ident="feedback"/>
                  <valItem ident="harp-harmonic"/>
                  <valItem ident="left-hand"/>
                  <valItem ident="let-ring"/>
                  <valItem ident="natural-harmonic"/>
                  <valItem ident="palm-muting"/> <!-- TODO: for consistency, change into palm-mute? -->
                  <valItem ident="rake"/>
                  <valItem ident="tap-fing"/>
                  <valItem ident="tap-harmonic"/>
                  <valItem ident="tap-pick"/>
                  <valItem ident="vibrato-bar"/>
                </valList>
              </attDef>
            </attList>
          </classSpec>

          <elementSpec ident="dir" module="MEI.shared" mode="change">
            <classes mode="change">
              <memberOf key="att.technique.tablature" mode="add"/>
              <memberOf key="att.dirmark.tablature" mode="add"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:choice mode="change">
                  <rng:text/>
                  <rng:ref name="model.textPhraseLike.limited"/>
                  <rng:ref name="model.graphicPrimitiveLike"/>
                  <rng:ref name="model.editLike"/>
                  <rng:ref name="model.transcriptionLike"/>
                  <rng:ref name="model.controlEventLike"/>
                </rng:choice>
              </rng:zeroOrMore>
            </content>
          </elementSpec>

          <!-- Pitch inflection: bends -->

          <elementSpec ident="pitchInflection" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="model.controlEventLike.cmn"/>
            </classes>
            <content>
              <rng:text/>
            </content>
            <attList>
              <attDef ident="prebend" usage="opt">
                <datatype>
                  <rng:data type="boolean"/>
                </datatype>
              </attDef>
              <attDef ident="dis" usage="opt">
                <datatype>
                  <rng:data type="integer"/>
                </datatype>
              </attDef>
              <attDef ident="show.fret" usage="opt">
                <datatype>
                  <rng:data type="boolean"/>
                </datatype>
              </attDef>
              <attDef ident="show.fret.enclose" usage="opt">
                <valList type="closed">
                  <valItem ident="paren"/> <!-- TODO other values? -->
                </valList>
              </attDef>
              <attDef ident="vibrato-bar" usage="opt">
                <datatype>
                  <rng:data type="boolean"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>

          <!-- Vibrato -->
          
          <elementSpec ident="vibrato" module="MEI.frettab" mode="add" ns="http://www.music-encoding.org/ns/mei">
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.technique.tablature"/>
              <memberOf key="att.startEndId"/>
              <memberOf key="att.dirmark.tablature"/>
              <memberOf key="model.controlEventLike"/>
            </classes>
            <attList>
              <attDef ident="wide" usage="opt">
                <datatype>
                  <rng:data type="boolean"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>

        </specGrp>
      </schemaSpec>
    </body>
  </text>
</TEI>
